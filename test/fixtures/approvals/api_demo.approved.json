{
  "assignments": [
    {
      "track": "ruby",
      "slug": "one",
      "readme": "# One\n\nThis is one.\n\n* one\n* one again\n\n\n## Source\n\nThe internet. [view source](http://example.com)\n",
      "test_file": "one_test.rb",
      "tests": "require 'minitest/autorun'\nrequire_relative 'example'\nclass OneTest < Minitest::Test\n  def test_one\n    assert_equal 1, One.value\n  end\nend\n",
      "files": [
        {
          "name": "Fakefile",
          "text": "Autorun fake code\n"
        },
        {
          "name": "one_test.rb",
          "text": "require 'minitest/autorun'\nrequire_relative 'example'\nclass OneTest < Minitest::Test\n  def test_one\n    assert_equal 1, One.value\n  end\nend\n"
        }
      ]
    },
    {
      "track": "go",
      "slug": "one",
      "readme": "# One\n\nThis is one.\n\n* one\n* one again\n\n\n## Source\n\nThe internet. [view source](http://example.com)\n",
      "test_file": "one_test.go",
      "tests": "package one\n\nimport \"testing\"\n\nfunc TestOne(t *testing.T) {\n\tif 1 != Uno.Value {\n\t\tt.Errorf(\"Expected Uno.Value to equal 1\")\n\t}\n}\n\n",
      "files": [
        {
          "name": "one_test.go",
          "text": "package one\n\nimport \"testing\"\n\nfunc TestOne(t *testing.T) {\n\tif 1 != Uno.Value {\n\t\tt.Errorf(\"Expected Uno.Value to equal 1\")\n\t}\n}\n\n"
        }
      ]
    },
    {
      "track": "scala",
      "slug": "one",
      "readme": "# One\n\nThis is one.\n\n* one\n* one again\n\n\n## Source\n\nThe internet. [view source](http://example.com)\n",
      "test_file": "src/test/scala/one_test.scala",
      "tests": "import org.scalatest._\n\nclass OneTest extends FunSuite with Matchers {\n  test (\"one\") {\n    One.value should be (1)\n  }\n}\n",
      "files": [
        {
          "name": "build.sbt",
          "text": "scalaVersion := \"2.10.3\"\n\nlibaryDependencies += \"org.scalatest\" %% \"scalatest\" % \"2.0.RC3\" % \"test\"\n"
        },
        {
          "name": "src/test/scala/one_test.scala",
          "text": "import org.scalatest._\n\nclass OneTest extends FunSuite with Matchers {\n  test (\"one\") {\n    One.value should be (1)\n  }\n}\n"
        }
      ]
    }
  ]
}