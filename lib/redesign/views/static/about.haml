%section.main
  %section.masthead
    %div.mast-contents
      %img.mast-logo{:src => link_to("/icons/logo.svg")}
      %span.headline About Exercism

  %article.article-block
    %div.article-contents
      %h2.header About
      %p Exercism provides a space to think deeply about simple, expressive, and readable code, and experiment and discuss what <em>good </em> looks like.

      %ul.list
        %li
          Practice writing expressive code.
        %li
          Practice accepting feedback graciously.
        %li
          Practice giving feedback respectfully.

  %article.article-block
    %div.article-contents
      %h2.header Languages
      %p
        Exercises are currently available in Clojure, Coffeescript, Elixir, Go, Haskell, Javascript, Objective C, Ocaml, Perl5, Python, Ruby, and Scala.
        Coming Up: Java, Rust, Erlang, PHP, and Common Lisp.

  %article.article-block
    %div.article-contents
      %h2.header Future
      %p
        I don't yet know what exercism.io is or will become. It helps that so many people are thinking out loud, sharing ideas, and submitting bugs, feature requests, and pull requests.
      %p
        I hope that it will develop into a place where you can learn, play, experiment, and discuss.

  %article.article-block
    %div.article-contents
      %h2.header Open Source
      %p Exercism.io is free and open source.
      %p
        The
        %a{:href => "https://github.com/exercism/exercism.io", :target => "blank"} website
        is written in Ruby using the Sinatra web framework. It is licensed under the GNU Affero General Public License.
      %p
        The
        %a{:href => "https://github.com/exercism/cli", :target => "blank"} command-line client
        is written in Go, and uses the MIT license.
      %p
        An overwhelmingly large number of people have
        = succeed "." do
          %a{:href => "https://github.com/exercism/exercism.io/graphs/contributors", :target => "blank"} contributed to the codebase
      %p An even larger number of people have contributed by doing exercises and participating in the discussions about code.

  %article.article-block
    %div.article-contents
      %h2.header Origins
      %p
        In November 2006 I joined the Cattle Drive on the JavaRanch. In short, you send in a assignment by email, and a real person gives you comments
        back. It didn't take long until I was nitpicking other people's code, and I have been doing so on a daily basis since then.
      %p
        Reviewing other people's code has taught me more about writing readable code, than receiving feedback on my own code. I wondered if it would be possible to have
        people first get nitpicked, then turn around and nitpick new people, and spread the effort of giving feedback across a larger group.
      %p
        In February 2013 I joined Jumpstart Lab as a developer and co-instructor for their 6-month full-time developer training program. One of the things we implemented
        was a daily programming warm-up exercise. At first, this was simply a README, then we added a test suite to help guide the students and let them get a taste of what TDD feels like. After a few months we had a number of pain points that we wanted to address:
      %p We had to manually upload a new warmup every morning
      %ul.list
        %li The students often did not finish warmups
        %li The students didn't get feedback on the code they wrote for the warmups
        %li I decided to try to combine these ideas into an app, and launched a very rough prototype to the students in late June 2013.
      %p
        It came as a complete surprise to me that the project hit a nerve with people. I expected dozens of people to use the site. Within the first couple of months, over 1,000 people had submitted over 10,000 pieces of code.
